name: MultiArch Build
on:
  push:
    branches:
      - 'main'
jobs:
  build-app:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      id-token: write
      contents: read
    env:
      DOCKER_IMAGE_NAME: dummy
      ECR_IMAGE_NAME: t3-dummy
      AWS_REGION: us-east-1
      ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/CICD_ECR
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v2

      - name: setup
        run: |
          mv ./docker/build.Dockerfile ./Dockerfile 
          mkdir build

      - name: build utility image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }} .

      - name: build app
        run: docker run --name ${{ env.DOCKER_IMAGE_NAME }}-build ${{ env.DOCKER_IMAGE_NAME }}

      - name: extract build
        run: |
          docker cp ${{ env.DOCKER_IMAGE_NAME }}-build:/app/.next ./build
          docker cp ${{ env.DOCKER_IMAGE_NAME }}-build:/app/node_modules ./build

      - name: setup build
        run: |
          mv ./docker/run.Dockerfile ./build/Dockerfile
          mv public next.config.mjs package.json ./build

      - name: cleanup build
        run: |
          docker rm ${{ env.DOCKER_IMAGE_NAME }}-build
          docker rmi ${{ env.DOCKER_IMAGE_NAME }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.run_number }}
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./build
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
